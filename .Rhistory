{
library(xlsx)
billsdf=read.xlsx2('C:/Users/jyotika/Desktop/project1-master/billdata.xlsx',1)
colnames(b)<-c('billdate', 'billstartdt', 'billenddt', 'kwh', 'mindemandkw', 'actualdemandkw', 'custcharge', 'distchrgkw', 'mttkwh', 'tbckwh', 'nugckwh', 'sbckwh', 'rggieekwh', 'deliverykwh', 'totdeliverychrg', 'supplychrg', 'totalchrg')
return(billsdf)
}
arr={}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eload$dates))
{
temp_kwh=temp_kwh+eload$kWh[i]
if(i==length(eload$dates) || format(eload$dates[i],"%m")!=format(eload$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eload$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eload$dates[i],"%m"))
arr[ind1]=t1
arr[ind1]=t1
t1=0
ind1=ind1+1
}
}
matrix(c(c1,c2,arr), nrow=24,ncol=3)
arr={}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eload$dates))
{
temp_kwh=temp_kwh+eload$kWh[i]
if(i==length(eload$dates) || format(eload$dates[i],"%m")!=format(eload$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eload$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eload$dates[i],"%m"))
arr[ind1]=temp_kwh
arr[ind1]=temp_kwh
temp_kwh=0
ind1=ind1+1
}
}
print(matrix(c(c1,c2,arr), nrow=24,ncol=3))
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(stringr)
temp=paste(str_pad(eloaddf$DATE,6,pad="0"), str_pad(eloaddf$TIME,4,pad="0"), sep=" ")
eloaddf$dates= as.POSIXct(temp, format="%m%d%y %H%M",tx="GMT")
temp_time=eloaddf$TIME
temp_date=eloaddf$DATE
eloaddf$TIME<-NULL
eloaddf$DATE<-NULL
eloaddf<-eloaddf[,c("dates","kWh","kVARh")]
weatherdf=read.fwf('C:/Users/jyotika/Desktop/project1-master/1874606932872dat.txt',sep="",widths=c(6,5,12,3,1,3,3,3,1,1,1,4,2,2,2,2,2,2,2,1,2,2,6,5,6,3,3,4,5,5,5,2))
colnames(weatherdf)<-c('USAF','WBAN','YR--MODAHRMN','DIR','SPD','GUS','CLG','SKC','L','M','H','VSB','MW','MW','MW','MW','AW','AW','AW','AW','W','TEMP','DEWP','SLP','ALT')
weatherdf = weatherdf[-1,]
weatherdf$DATES<-as.POSIXct(weatherdf$`YR--MODAHRMN`,format="%Y%m%d%H%M", tx="GMT")
rownames(weatherdf)=1:length(weatherdf$TEMP)
library(xlsx)
billsdf=read.xlsx2('C:/Users/jyotika/Desktop/project1-master/billdata.xlsx',1)
colnames(b)<-c('billdate', 'billstartdt', 'billenddt', 'kwh', 'mindemandkw', 'actualdemandkw', 'custcharge', 'distchrgkw', 'mttkwh', 'tbckwh', 'nugckwh', 'sbckwh', 'rggieekwh', 'deliverykwh', 'totdeliverychrg', 'supplychrg', 'totalchrg')
library(xlsx)
billsdf=read.xlsx2('C:/Users/jyotika/Desktop/project1-master/billdata.xlsx',1)
colnames(billsdf)<-c('billdate', 'billstartdt', 'billenddt', 'kwh', 'mindemandkw', 'actualdemandkw', 'custcharge', 'distchrgkw', 'mttkwh', 'tbckwh', 'nugckwh', 'sbckwh', 'rggieekwh', 'deliverykwh', 'totdeliverychrg', 'supplychrg', 'totalchrg')
arr={}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eload$dates))
{
temp_kwh=temp_kwh+eload$kWh[i]
if(i==length(eload$dates) || format(eload$dates[i],"%m")!=format(eload$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eload$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eload$dates[i],"%m"))
arr[ind1]=temp_kwh
arr[ind1]=temp_kwh
temp_kwh=0
ind1=ind1+1
}
}
matrix(c(c1,c2,arr), nrow=24,ncol=3)
arr={}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eloaddf$dates))
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if(i==length(eloaddf$dates) || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eloaddf$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eloaddf$dates[i],"%m"))
arr[ind1]=temp_kwh
arr[ind1]=temp_kwh
temp_kwh=0
ind1=ind1+1
}
}
matrix(c(c1,c2,arr), nrow=24,ncol=3)
(c(c1,c2,arr), nrow=24,ncol=3)
(c(c1,c2,arr))
c(c1,c2,arr)
REP=(c(c1,c2,arr), nrow=24,ncol=3)
REP=matrix(c(c1,c2,arr), nrow=24,ncol=3)
write.table(format(REP, justify="right"),
row.names=F, col.names=F, quote=F)
REP
REP=matrix(c(c1,c2,arr), nrow=24,ncol=3)
REP
REP=cbind(c1,c2,arr)
REP
length(c1)
arr={}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eloaddf$dates))
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if(i==length(eloaddf$dates) || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eloaddf$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eloaddf$dates[i],"%m"))
arr[ind1]=temp_kwh
arr[ind1]=temp_kwh
temp_kwh=0
ind1=ind1+1
}
}
REP=cbind(c1,c2,arr)
for(i in 1:length(eloaddf$dates))
{
}
length(eloaddf$dates)
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eloaddf$dates))
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if(i==length(eloaddf$dates) || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eloaddf$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eloaddf$dates[i],"%m"))
arr[ind1]=temp_kwh+ eloaddf$kWh[i+1]
temp_kwh=0
ind1=ind1+1
i=i+1
}
}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:length(eloaddf$dates)-1)
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m"))
{
c1[ind1]<-as.numeric(format(eloaddf$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eloaddf$dates[i],"%m"))
arr[ind1]=temp_kwh+ eloaddf$kWh[i+1]
temp_kwh=0
ind1=ind1+1
i=i+1
}
}
arr={}
temp_kwh=0
ind1=1
c1={}
c2={}
for(i in 1:(length(eloaddf$dates)-1))
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if((i==length(eloaddf$dates)-1) || (as.numeric(format(eloaddf$dates[i],"%m"))!=as.numeric(format(eloaddf$dates[i+1],"%m"))))
{
c1[ind1]<-as.numeric(format(eloaddf$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eloaddf$dates[i],"%m"))
arr[ind1]=temp_kwh+ eloaddf$kWh[i+1]
temp_kwh=0
ind1=ind1+1
i=i+1
}
}
for(i in 1:(length(eloaddf$dates)-1))
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if((i==length(eloaddf$dates)-1) || (eloaddf$dates[i]!=eloaddf$dates[i+1]))
{
c1[ind1]<-as.numeric(format(eloaddf$dates[i],"%Y"))
c2[ind1]<-as.numeric(format(eloaddf$dates[i],"%m"))
arr[ind1]=temp_kwh+ eloaddf$kWh[i+1]
temp_kwh=0
ind1=ind1+1
i=i+1
}
}
for(i in 1:length(eloaddf$dates))
{
temp=temp+eloaddf$kwh[i]
if(i=length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kwh[i+1]
temp=0
ind1=ind1+1
}
}
for(i in 1:length(eloaddf$dates))
{
temp=temp+eloaddf$kWh[i]
if(i=length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
}
}
eloaddf$kWh[1]
eloaddf$kWh[1+1]
eloaddf$kWh[1+123]
for(i in 1:length(eloaddf$dates))
{
temp=temp+eloaddf$kWh[i]
if(i=length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
for(i in 1:length(eloaddf$dates))
{
temp=temp+eloaddf$kWh[i]
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
}
}
arr={}
i
0+eloaddf$kWh[1]
temp=0
for(i in 1:length(eloaddf$dates))
{
temp=temp+eloaddf$kWh[i]
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
}
}
i
temp=0
for(i in 1:(length(eloaddf$dates)-1))
{
temp=temp+eloaddf$kWh[i]
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
i=i+1
}
}
i
temp=0
for(i in 1:(length(eloaddf$dates)-1))
{
temp=temp+eloaddf$kWh[i]
if(i==length(eloaddf$dates))
next()
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
i=i+1
}
}
i
temp=0
i=1
ind1=1
while(i<length(eloaddf$dates))
{
temp=temp+eloaddf$kWh[i]
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
i=i+1
}
i=i+1
}
i
temp=0
i=1
ind1=1
while(i<length(eloaddf$dates))
{
temp=temp+eloaddf$kWh[i]
if(i==length(eloaddf$dates)-1 || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m") )
{
print(i)
arr[ind1]=temp+eloaddf$kWh[i+1]
temp=0
ind1=ind1+1
i=i+1
}
i=i+1
}
which(is.na(eloaddf$dates))
eloaddf$dates[6439]
eloaddf$dates[6440]=eloaddf[6439]+15*0
eloaddf$dates[6440]=eloaddf$dates[6439]+15*0
eloaddf$dates[6440]=eloaddf$dates[6439]+15*60
eloaddf$dates[6440]=eloaddf$dates[6439]+15
eloaddf$dates[6440]=eloaddf$dates[6439]+mns(15)
eloaddf$dates[6440]=eloaddf$dates[6439]+15*60
eloaddf$dates[6440]=eloaddf$dates[6439]+1500
eloaddf$dates[6440]=eloaddf$dates[6439]+1500/60
eloaddf$dates[6440]=eloaddf$dates[6439]+900
eloaddf$dates[6440]=eloaddf$dates[6439]+0*15*0
eloaddf$dates[6439]+15
eloaddf$dates[6439]+60
eloaddf$dates[6439]+120
eloaddf$dates[6439]+500
eloaddf$dates[6439]+900
as.POSIXct(eloaddf$dates[6439]+900, tx="GMT")
temp[1]
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(stringr)
temp=paste(str_pad(eloaddf$DATE,6,pad="0"), str_pad(eloaddf$TIME,4,pad="0"), sep=" ")
eloaddf$dates= as.POSIXct(temp, format="%m%d%y %H%M",tz="GMT")
temp_time=eloaddf$TIME
temp_date=eloaddf$DATE
eloaddf$TIME<-NULL
eloaddf$DATE<-NULL
eloaddf<-eloaddf[,c("dates","kWh","kVARh")]
geteloaddatadf<-function(){
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(stringr)
temp=paste(str_pad(eloaddf$DATE,6,pad="0"), str_pad(eloaddf$TIME,4,pad="0"), sep=" ")
eloaddf$dates= as.POSIXct(temp, format="%m%d%y %H%M",tz="GMT")
temp_time=eloaddf$TIME
temp_date=eloaddf$DATE
eloaddf$TIME<-NULL
eloaddf$DATE<-NULL
eloaddf<-eloaddf[,c("dates","kWh","kVARh")]
return(eloaddf)
}
geteloaddatadf()
geteloaddatadf()
# write a function geteloaddatadf() - you will assign the return value to eloaddf
# in the function do the following
# 1. load the electric load data from elecloaddata.xlsx
# you are not allowed to convert to .csv. Find an appropriate R package that can read .xlsx files and load
# the data in a dataframe called eloaddf. The columns should be dates, kwh, kwVAR
#
# some notes on the data
# the file has 15 min interval data from 1/1/2014 to 12/30/2015
# when you import the data, the first column of your dataset should be dates in POSIXct format
# HINT: use the strptime and as.POSIX.ct functions to form the eloaddf$dates
#
geteloaddatadf<-function(){
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(stringr)
temp=paste(str_pad(eloaddf$DATE,6,pad="0"), str_pad(eloaddf$TIME,4,pad="0"), sep=" ")
eloaddf$dates= as.POSIXct(temp, format="%m%d%y %H%M",tz="GMT")
temp_time=eloaddf$TIME
temp_date=eloaddf$DATE
eloaddf$TIME<-NULL
eloaddf$DATE<-NULL
eloaddf<-eloaddf[,c("dates","kWh","kVARh")]
return(eloaddf)
}
# write a function getweatherdf() - you will assign the return value to weatherdf
# 2. Next load the weather data from NOAA into a data frame weatherdf. The data is in 1874606932872dat.txt
# This is 1 hour interval data for a specific weather station close to
# the location of the site from which electric load data was obtained
#
# you need to use fixed width parsing to read the data into a data frame.
# add a column called dates to the dataframe similar to #1 above
#
getweatherdf<-function()
{
weatherdf=read.fwf('C:/Users/jyotika/Desktop/project1-master/1874606932872dat.txt',sep="",widths=c(6,5,12,3,1,3,3,3,1,1,1,4,2,2,2,2,2,2,2,1,2,2,6,5,6,3,3,4,5,5,5,2))
colnames(weatherdf)<-c('USAF','WBAN','YR--MODAHRMN','DIR','SPD','GUS','CLG','SKC','L','M','H','VSB','MW','MW','MW','MW','AW','AW','AW','AW','W','TEMP','DEWP','SLP','ALT')
weatherdf = weatherdf[-1,]
weatherdf$DATES<-as.POSIXct(weatherdf$`YR--MODAHRMN`,format="%Y%m%d%H%M", tz="GMT")
rownames(weatherdf)=1:length(weatherdf$TEMP)
return(weatherdf)
}
# write a funcion getbillsdf() - you will assign the return value to billsdf
# 3. Next load the bill data from billdata.xlsx
# this data is monthly and carefully note the start and end date of each billing period.
# name the fields of the dataframe as
# billdate, billstartdt, billenddt, kwh, mindemandkw, actualdemandkw, custcharge,
# distchrgkw, mttkwh, tbckwh,nugckwh, sbckwh, rggieekwh, deliverykwh,
# totdeliverychrg, supplychrg, totalchrg
#
getbillsdf<-function()
{
library(xlsx)
billsdf=read.xlsx2('C:/Users/jyotika/Desktop/project1-master/billdata.xlsx',1)
colnames(billsdf)<-c('billdate', 'billstartdt', 'billenddt', 'kwh', 'mindemandkw', 'actualdemandkw', 'custcharge', 'distchrgkw', 'mttkwh', 'tbckwh', 'nugckwh', 'sbckwh', 'rggieekwh', 'deliverykwh', 'totdeliverychrg', 'supplychrg', 'totalchrg')
return(billsdf)
}
geteloaddatadf()
getbillsdf()
getweatherdf()
temp_kwh=0
indx=1
summary_elecload=matrix(nrow=24,ncol=3,byrow=FALSE)
for(i in 1:(length(eloaddf$dates)-1))
{
temp_kwh=temp_kwh+eloaddf$kWh[i]
if((i==length(eloaddf$dates)-1) || format(eloaddf$dates[i],"%m")!=format(eloaddf$dates[i+1],"%m"))
{
summary_elecload[ind1,1]=as.numeric(format(eloaddf$dates[i],"%Y"))
summary_elecload[ind1,2]=as.numeric(format(eloaddf$dates[i],"%m"))
summary_elecload[ind1,3]=temp_kwh+ eloaddf$kWh[i+1]
temp_kwh=0
indx=indx+1
i=i+1
}
}
print(summary_elecload)
geteloaddatadf()
geteloaddatadf<-function(print=FALSE){
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(stringr)
temp=paste(str_pad(eloaddf$DATE,6,pad="0"), str_pad(eloaddf$TIME,4,pad="0"), sep=" ")
eloaddf$dates= as.POSIXct(temp, format="%m%d%y %H%M",tz="GMT")
temp_time=eloaddf$TIME
temp_date=eloaddf$DATE
eloaddf$TIME<-NULL
eloaddf$DATE<-NULL
eloaddf<-eloaddf[,c("dates","kWh","kVARh")]
return(eloaddf)
}
geteloaddatadf()
# write a function geteloaddatadf() - you will assign the return value to eloaddf
# in the function do the following
# 1. load the electric load data from elecloaddata.xlsx
# you are not allowed to convert to .csv. Find an appropriate R package that can read .xlsx files and load
# the data in a dataframe called eloaddf. The columns should be dates, kwh, kwVAR
#
# some notes on the data
# the file has 15 min interval data from 1/1/2014 to 12/30/2015
# when you import the data, the first column of your dataset should be dates in POSIXct format
# HINT: use the strptime and as.POSIX.ct functions to form the eloaddf$dates
#
geteloaddatadf<-function(){
library(xlsx)
eloaddf=read.xlsx('C:/Users/jyotika/Desktop/project1-master/elecloaddata.xlsx',sheetName = '15min intervals 2014 & 15')
library(stringr)
temp=paste(str_pad(eloaddf$DATE,6,pad="0"), str_pad(eloaddf$TIME,4,pad="0"), sep=" ")
eloaddf$dates= as.POSIXct(temp, format="%m%d%y %H%M",tz="GMT")
temp_time=eloaddf$TIME
temp_date=eloaddf$DATE
eloaddf$TIME<-NULL
eloaddf$DATE<-NULL
eloaddf<-eloaddf[,c("dates","kWh","kVARh")]
return(eloaddf)
}
# write a function getweatherdf() - you will assign the return value to weatherdf
# 2. Next load the weather data from NOAA into a data frame weatherdf. The data is in 1874606932872dat.txt
# This is 1 hour interval data for a specific weather station close to
# the location of the site from which electric load data was obtained
#
# you need to use fixed width parsing to read the data into a data frame.
# add a column called dates to the dataframe similar to #1 above
#
getweatherdf<-function()
{
weatherdf=read.fwf('C:/Users/jyotika/Desktop/project1-master/1874606932872dat.txt',sep="",widths=c(6,5,12,3,1,3,3,3,1,1,1,4,2,2,2,2,2,2,2,1,2,2,6,5,6,3,3,4,5,5,5,2))
colnames(weatherdf)<-c('USAF','WBAN','YR--MODAHRMN','DIR','SPD','GUS','CLG','SKC','L','M','H','VSB','MW','MW','MW','MW','AW','AW','AW','AW','W','TEMP','DEWP','SLP','ALT')
weatherdf = weatherdf[-1,]
weatherdf$DATES<-as.POSIXct(weatherdf$`YR--MODAHRMN`,format="%Y%m%d%H%M", tz="GMT")
rownames(weatherdf)=1:length(weatherdf$TEMP)
return(weatherdf)
}
# write a funcion getbillsdf() - you will assign the return value to billsdf
# 3. Next load the bill data from billdata.xlsx
# this data is monthly and carefully note the start and end date of each billing period.
# name the fields of the dataframe as
# billdate, billstartdt, billenddt, kwh, mindemandkw, actualdemandkw, custcharge,
# distchrgkw, mttkwh, tbckwh,nugckwh, sbckwh, rggieekwh, deliverykwh,
# totdeliverychrg, supplychrg, totalchrg
#
getbillsdf<-function()
{
library(xlsx)
billsdf=read.xlsx2('C:/Users/jyotika/Desktop/project1-master/billdata.xlsx',1)
colnames(billsdf)<-c('billdate', 'billstartdt', 'billenddt', 'kwh', 'mindemandkw', 'actualdemandkw', 'custcharge', 'distchrgkw', 'mttkwh', 'tbckwh', 'nugckwh', 'sbckwh', 'rggieekwh', 'deliverykwh', 'totdeliverychrg', 'supplychrg', 'totalchrg')
return(billsdf)
}
eloaddf=geteloaddatadf()
billsdf=getbillsdf()
weatherdf=getweatherdf()
